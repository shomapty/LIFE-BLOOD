name: Build & Release

on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - main
      - master
      - develop

jobs:
  build:
    name: Build & Release
    runs-on: macos-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      - name: Install Dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release --split-per-abi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            build/app/outputs/apk/release/*.apk
            build/ios/iphoneos/app.ipa

      - name: Push to GitHub Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*.apk,build/ios/iphoneos/app.ipa"
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.TOKEN }}
          allowUpdates: true

      - name: Deploy to GitHub Enterprise
        run: |
          echo "Deploying to GitHub Enterprise..."
          # Example deployment script or commands
          # Upload builds to a specific location or deploy them
          
          # If deploying to a specific server or service
          # curl -X POST -F 'file=@build/app/outputs/apk/release/app-release.apk' https://your-deployment-server.com/upload
          
          # Example of using SSH to copy files to a server
          # scp build/app/outputs/apk/release/app-release.apk user@your-server:/path/to/deploy/
          
          # Replace the above examples with your actual deployment commands.
